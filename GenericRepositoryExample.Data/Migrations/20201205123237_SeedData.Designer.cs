// <auto-generated />
using GenericRepositoryExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenericRepositoryExample.Data.Migrations
{
    [DbContext(typeof(GenericRepoDbContext))]
    [Migration("20201205123237_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenericRepositoryExample.Core.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Linkin Park"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Flogging Molly"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Red Hot Chilli Peppers"
                        });
                });

            modelBuilder.Entity("GenericRepositoryExample.Core.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Musics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Name = "In The End"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            Name = "Numb"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            Name = "Breaking The Habit"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 2,
                            Name = "Fear of the dark"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 2,
                            Name = "Number of the beast"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 2,
                            Name = "The Trooper"
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 3,
                            Name = "What''s left of the flag"
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 3,
                            Name = "Drunken Lullabies"
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 3,
                            Name = "If I Ever Leave this World Alive"
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 4,
                            Name = "Californication"
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 4,
                            Name = "Tell Me Baby"
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 4,
                            Name = "Parallel Universe"
                        });
                });

            modelBuilder.Entity("GenericRepositoryExample.Core.Models.Music", b =>
                {
                    b.HasOne("GenericRepositoryExample.Core.Models.Artist", "Artist")
                        .WithMany("Musics")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
